BOOTBRANCH='tag:v2020.10'
BOOTDIR='u-boot'
BOOTPATCHDIR="u-boot-arm-64"
OFFSET=16
BOOTSIZE=512
BOOTFS_TYPE=fat
SERIALCON='ttyS2:1500000'

FIXED_IMAGE_SIZE=5000

BOOTDELAY=0
OVERLAY_PREFIX='rockchip'

UBOOT_TARGET_MAP="u-boot-dtb.bin;;idbloader.bin uboot.img trust.bin"
ATFSOURCE=''
ATF_COMPILE='no'

GOVERNOR="ondemand"
CPUMIN="600000"
CPUMAX="1512000"

ARCH=arm64

SCR_ENV='rk3328-extlinux.conf'


case $BRANCH in
	current)
	KERNELDIR='linux-current'
	KERNELSOURCE='https://github.com/150balbes/linux-arm'
	KERNELBRANCH='branch:master'
	EXTRAWIFI_LOCAL="yes"
	;;
esac

if [[ $ADD_UBOOT == yes ]]; then
        write_uboot_platform()
	{
		dd if=$1/idbloader.bin of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
		dd if=$1/uboot.img of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
		dd if=$1/trust.bin of=$2 seek=24576 conv=notrunc status=none >/dev/null 2>&1
	}

	setup_write_uboot_platform()
	{
		if grep -q "ubootpart" /proc/cmdline; then
			local tmp=$(cat /proc/cmdline)
			tmp="${tmp##*ubootpart=}"
			tmp="${tmp%% *}"
			[[ -n $tmp ]] && local part=$(findfs PARTUUID=$tmp 2>/dev/null)
			[[ -n $part ]] && local dev=$(lsblk -n -o PKNAME $part 2>/dev/null)
			[[ -n $dev ]] && DEVICE="/dev/$dev"
		fi
	}

	uboot_custom_postprocess()
	{
		if [ "$(uname -m)" = "aarch64" ]; then
			if [ "$(lsb_release -sc)" = "focal" ]; then
				PKG_PREFIX="qemu-x86_64-static "
			else
				PKG_PREFIX="qemu-x86_64 "
			fi
		else
			PKG_PREFIX=""
		fi

		RKBIN_DIR="$SRC/cache/sources/rkbin-tools"
		BOOT_USE_BLOBS=yes
		BOOT_SOC=rk3328

		DDR_BLOB="$SRC/$BOARD_DIR/rk3328_ddr_933MHz_v1.16.bin"
		MINILOADER_BLOB="$SRC/$BOARD_DIR/rk3328_miniloader_v2.50.bin"
		BL31_BLOB="$SRC/$BOARD_DIR/rk3328_bl31_v1.42.elf"

		BL31_ADDR="0x10000"

		local tempfile=$(mktemp)

		mkimage -n $BOOT_SOC -T rksd -d $DDR_BLOB idbloader.bin
		cat $MINILOADER_BLOB >> idbloader.bin

		$PKG_PREFIX$RKBIN_DIR/tools/loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x200000

		cat >trust.ini <<EOF
[VERSION]
MAJOR=1
MINOR=0
[BL30_OPTION]
SEC=0
[BL31_OPTION]
SEC=1
PATH=$BL31_BLOB
ADDR=$BL31_ADDR
[BL32_OPTION]
SEC=0
[BL33_OPTION]
SEC=0
[OUTPUT]
PATH=trust.bin
EOF

		$PKG_PREFIX$RKBIN_DIR/tools/trust_merger --verbose trust.ini

	}
fi

family_tweaks()
{
	# enable root login via the serial console  ttys2 may be deprecated
	echo "ttyS2" >> $SDCARD/etc/securetty
	echo "ttyFIQ0" >> $SDCARD/etc/securetty
	echo 'DAEMON_ARGS="-w 1024 --data=16"' > $SDCARD/etc/default/haveged

	cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf
	install -m 755 $SRC/$BOARD_DIR/ddbr $SDCARD/usr/bin/

	mkdir -p $SDCARD/boot/extlinux
	cp $SRC/$BOARD_DIR/$SCR_ENV $SDCARD/boot/extlinux/extlinux.conf

	install -m 755 $SRC/$BOARD_DIR/install-rk3328.sh $SDCARD/root/install-rk3328.sh
	cp $SRC/$BOARD_DIR/fstab $SDCARD/root/fstab

#	install -m 755 $SRC/$BOARD_DIR/sound.sh $SDCARD/usr/bin/sound.sh
	cp -R -f $SRC/$BOARD_DIR/cards  $SDCARD/usr/share/alsa/

	cp -R $SRC/$BOARD_DIR/u-boot  $SDCARD/root/



	echo 'Section "Device"
    Identifier  "Default Device"
    Driver      "modesetting"
    Option      "AccelMethod"    "none"     ### "glamor" to enable 3D acceleration, "none" to disable.
EndSection
Section "ServerFlags"
        Option  "AutoAddGPU" "off"
        Option "Debug" "dmabuf_capable"
EndSection
Section "OutputClass"
        Identifier "Lima"  # "Panfrost"
        MatchDriver "rockchip"  # sun4i-drm  rockchip
        Driver "modesetting"
        Option "PrimaryGPU" "true"
EndSection' >> $SDCARD/etc/X11/xorg.conf.d/01-armbian-defaults.conf

	mv $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio-nanopi-m4v2.bin $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio.bin
	mv $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio-nanopi-m4v2.txt $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio.txt
	cp $SRC/$BOARD_DIR/wifi/* $SDCARD/lib/firmware/brcm/
	cp $SRC/$BOARD_DIR/p1/* $SDCARD/lib/firmware/rtl_bt/
}
